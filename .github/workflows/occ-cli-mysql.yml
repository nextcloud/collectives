name: occ cli

on:
  pull_request:

permissions:
  contents: read

concurrency:
  group: occ-cli-mysql-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  occ-cli-mysql:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-versions: ['8.2']
        server-versions: ['master']

    services:
      mysql:
        image: ghcr.io/nextcloud/continuous-integration-mariadb-10.6:latest
        ports:
          - 4444:3306/tcp
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
        options: --health-cmd="mysqladmin ping" --health-interval 5s --health-timeout 2s --health-retries 5

    steps:
      - name: Set app env
        run: |
          # Split and keep last
          echo "APP_NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV

      - name: Checkout server
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          submodules: true
          repository: nextcloud/server
          ref: ${{ matrix.server-versions }}

      - name: Checkout circles app
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          repository: nextcloud/circles
          path: apps/circles
          ref: ${{ matrix.server-versions }}

      - name: Checkout app
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          path: apps/${{ env.APP_NAME }}

      - name: Set up php ${{ matrix.php-versions }}
        uses: shivammathur/setup-php@6d7209f44a25a59e904b1ee9f3b0c33ab2cd888d # v2
        with:
          php-version: ${{ matrix.php-versions }}
          # https://docs.nextcloud.com/server/stable/admin_manual/installation/source_installation.html#prerequisites-for-manual-installation
          extensions: bz2, ctype, curl, dom, fileinfo, gd, iconv, intl, json, libxml, mbstring, openssl, pcntl, posix, session, simplexml, xmlreader, xmlwriter, zip, zlib, mysql, pdo_mysql, sqlite, pdo_sqlite
          coverage: none
          ini-file: development
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable ONLY_FULL_GROUP_BY MySQL option
        run: |
          echo "SET GLOBAL sql_mode=(SELECT CONCAT(@@sql_mode,',ONLY_FULL_GROUP_BY'));" | mysql -h 127.0.0.1 -P 4444 -u root -prootpassword
          echo "SELECT @@sql_mode;" | mysql -h 127.0.0.1 -P 4444 -u root -prootpassword

      - name: Check composer file existence
        id: check_composer
        uses: andstor/file-existence-action@20b4d2e596410855db8f9ca21e96fbe18e12930b # v2
        with:
          files: apps/${{ env.APP_NAME }}/composer.json

      - name: Set up dependencies
        # Only run if phpunit config file exists
        if: steps.check_composer.outputs.files_exists == 'true'
        working-directory: apps/${{ env.APP_NAME }}
        run: composer i --no-dev

      - name: Set up Nextcloud
        env:
          DB_PORT: 4444
        run: |
          mkdir data
          ./occ maintenance:install --verbose --database=mysql --database-name=nextcloud --database-host=127.0.0.1 --database-port=$DB_PORT --database-user=root --database-pass=rootpassword --admin-user admin --admin-pass admin
          ./occ app:enable --force ${{ env.APP_NAME }}
          for user in alice bob jane john; do \
          OC_PASS="$user" ./occ user:add --password-from-env "$user"; \
          done

      - name: Run Collectives occ commands
        run: |
          ./occ app:list
          ./occ collectives:create --owner alice NewCollective
          ./occ collectives:index
          ./occ collectives:pages:expire
          ./occ collectives:pages:trashbin:cleanup -f
          ./occ collectives:pages:purge-obsolete

      - name: Disable circles and run occ command
        run: |
          ./occ app:disable circles
          ./occ app:list

  summary:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: occ-cli-mysql

    if: always()

    name: occ-cli-mysql-summary

    steps:
      - name: Summary status
        run: if ${{ needs.occ-cli-mysql.result != 'success' }}; then exit 1; fi
