image: registry.gitlab.com/collectivecloud/docker-builds:php8.0-nc21

stages:
  - prepare
  - build
  - test

# Select what we should cache between builds
cache:
  paths:
    - vendor/

# Set any variables we need

variables:
  # Configure mariadb environment variables (https://hub.docker.com/r/_/mariadb/)
  MYSQL_DATABASE: nextcloud
  MYSQL_ROOT_PASSWORD: mariadb_password
  NEXTCLOUD_SOURCE: '/var/www/html'
  COMMIT_IMAGE: $CI_REGISTRY_IMAGE/ci:$CI_COMMIT_SHA
  LATEST_IMAGE: $CI_REGISTRY_IMAGE/ci:latest

# PHP jobs

php-static-psalm-analysis:
  stage: prepare
  script:
    - vendor/bin/psalm.phar
  before_script:
    - make composer

.php-unit: &php-unit
  stage: test
  script:
    - vendor/bin/phpunit --configuration phpunit.xml --coverage-text --colors=never
  before_script:
    - make composer
    - ln -s `pwd` $NEXTCLOUD_SOURCE/apps/collectives
  services:
    - mariadb:latest

php-unit-php7.3-nc20:
  <<: *php-unit
  image: registry.gitlab.com/collectivecloud/docker-builds:php7.3-nc20

php-unit-php8.0-nc21:
  <<: *php-unit
  image: registry.gitlab.com/collectivecloud/docker-builds:php8.0-nc21

.php-integration: &php-integration
  stage: test
  script:
    - vendor/bin/behat --config=tests/Integration/config/behat.yml --profile ci
  before_script:
    - make composer
    - ln -s `pwd` $NEXTCLOUD_SOURCE/apps/collectives
    - sudo -u www-data $NEXTCLOUD_SOURCE/occ app:enable collectives
    - INTERNAL_IP_ADDRESS="$(ip a show type veth | grep -o "inet [0-9]*\.[0-9]*\.[0-9]*\.[0-9]*" | grep -o "[0-9]*\.[0-9]*\.[0-9]*\.[0-9]*")"
    - echo "$INTERNAL_IP_ADDRESS nextcloud.local" >>/etc/hosts
    - /etc/init.d/apache2 start
  services:
    - mariadb:latest

php-integration-php7.3-nc20:
  <<: *php-integration
  image: registry.gitlab.com/collectivecloud/docker-builds:php7.3-nc20

php-integration-php8.0-nc21:
  <<: *php-integration
  image: registry.gitlab.com/collectivecloud/docker-builds:php8.0-nc21

# JS jobs

js-lint:
  image: node
  stage: prepare
  script:
    - make lint
  before_script:
    - make npm-init

js-build:
  image: node
  stage: prepare
  script:
    - make build-js-production
  before_script:
    - make npm-init
  artifacts:
    paths:
      - js

js-unit:
  image: node
  stage: test
  script:
    - make test-js
  before_script:
    - make npm-init

e2e:
  stage: test
  image: cypress/browsers
  variables:
    CYPRESS_baseUrl: http://nextcloud.local/index.php
  services:
    - name: $COMMIT_IMAGE
      alias: nextcloud.local
  script:
    - $(npm bin)/wait-on -i 500 -t 240000 $CYPRESS_baseUrl
    - $(npm bin)/cypress run --browser chrome
  before_script:
    - make npm-init
    - $(npm bin)/cypress install
    - $(npm bin)/cypress verify
    - npm install --no-save wait-on
  needs:
    - build
  artifacts:
    paths:
      - cypress/videos
      - cypress/screenshots
    expire_in: 1 day
    when: on_failure

# Job to build documentation website on Gitlab pages
pages:
  image: registry.gitlab.com/pages/hugo:latest
  script:
    - apk add --update --no-cache git
    - git submodule update --init
    - cat DEVELOPING.md >>docs/content/development/_index.md
    - hugo --config=docs/config.toml
    - mv build/pages public
  artifacts:
    paths:
      - public
  only:
    - main

build:
  stage: build
  image: docker:stable
  services:
      - docker:stable-dind
  script:
    - echo building $COMMIT_IMAGE
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $LATEST_IMAGE || true
    - make docker-ci
    - docker push $COMMIT_IMAGE
    - docker tag $COMMIT_IMAGE $LATEST_IMAGE
    - docker push $LATEST_IMAGE
  before_script:
    - apk add --no-cache make rsync
  needs:
    - js-build
