image: registry.gitlab.com/collectivecloud/docker-builds:php8.0-nc21

stages:
  - prepare
  - test

# Select what we should cache between builds
cache:
  paths:
    - vendor/

# Set any variables we need

variables:
  # Configure mariadb environment variables (https://hub.docker.com/r/_/mariadb/)
  MYSQL_DATABASE: nextcloud
  MYSQL_ROOT_PASSWORD: mariadb_password
  NEXTCLOUD_SOURCE: '/var/www/html'
  COMMIT_IMAGE: $CI_REGISTRY_IMAGE/ci:$CI_COMMIT_SHA
  LATEST_IMAGE: $CI_REGISTRY_IMAGE/ci:latest

# App build job

Build App:
  image: node
  stage: prepare
  script:
    - echo "BUILD_VERSION=$CI_COMMIT_SHORT_SHA" >>build.env
    - echo "BUILD_JOB_ID=$CI_JOB_ID" >>build.env
    - VERSION="$CI_COMMIT_SHORT_SHA" make release
  before_script:
    - DEBIAN_FRONTEND=noninteractive apt-get update
    - DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends install make rsync
    - make npm-init
  artifacts:
    reports:
      dotenv: build.env
    paths:
      - build/release/collectives-${CI_COMMIT_SHORT_SHA}.tar.gz

# PHP jobs

Static PHP Analysis:
  stage: prepare
  script:
    - vendor/bin/psalm.phar
  before_script:
    - make composer

.php-unit: &php-unit
  stage: prepare
  script:
    - vendor/bin/phpunit --configuration phpunit.xml --coverage-text --colors=never
  before_script:
    - make composer
    - ln -s `pwd` $NEXTCLOUD_SOURCE/apps/collectives
  services:
    - mariadb:latest

Unit Test PHP 7.3 nextcloud 20:
  <<: *php-unit
  image: registry.gitlab.com/collectivecloud/docker-builds:php7.3-nc20

Unit Test PHP 8.0 nextcloud 21:
  <<: *php-unit
  image: registry.gitlab.com/collectivecloud/docker-builds:php8.0-nc21

Lint Javascript:
  image: node
  stage: prepare
  script:
    - make lint
  before_script:
    - make npm-init

Unit Test Javascript:
  image: node
  stage: prepare
  script:
    - make test-js
  before_script:
    - make npm-init

.php-integration: &php-integration
  stage: test
  script:
    - vendor/bin/behat --config=tests/Integration/config/behat.yml --profile ci
  before_script:
    - make composer
    - ln -s `pwd` $NEXTCLOUD_SOURCE/apps/collectives
    - sudo -u www-data $NEXTCLOUD_SOURCE/occ app:enable collectives
    - INTERNAL_IP_ADDRESS="$(ip a show type veth | grep -o "inet [0-9]*\.[0-9]*\.[0-9]*\.[0-9]*" | grep -o "[0-9]*\.[0-9]*\.[0-9]*\.[0-9]*")"
    - echo "$INTERNAL_IP_ADDRESS nextcloud.local" >>/etc/hosts
    - /etc/init.d/apache2 start
  services:
    - mariadb:latest

API PHP 7.3 nextcloud 20:
  <<: *php-integration
  image: registry.gitlab.com/collectivecloud/docker-builds:php7.3-nc20

API PHP 8.0 nextcloud 21:
  <<: *php-integration
  image: registry.gitlab.com/collectivecloud/docker-builds:php8.0-nc21
  allow_failure: true

.browser-test: &browser-test
  stage: test
  image: cypress/browsers
  variables:
    CYPRESS_baseUrl: http://nextcloud.local/index.php
    APP_SOURCE_URL: "https://gitlab.com/collectivecloud/collectives/-/jobs/${BUILD_JOB_ID}/artifacts/raw/build/release/collectives-${BUILD_VERSION}.tar.gz"
  script:
    - $(npm bin)/cypress run --browser chrome --config video=false
  before_script:
    - make npm-init
    - $(npm bin)/cypress install
    - $(npm bin)/cypress verify
  needs:
    - Build App
  artifacts:
    paths:
      - cypress/videos
      - cypress/screenshots
    expire_in: 1 day
    when: on_failure

Browser PHP 8.0 nextcloud 21:
  <<: *browser-test
  services:
    - name: registry.gitlab.com/collectivecloud/docker-builds:php8.0-nc21
      alias: nextcloud.local
      entrypoint: ["/usr/local/bin/run.sh"]
  allow_failure: true

Browser PHP 7.3 nextcloud 21:
  <<: *browser-test
  services:
    - name: registry.gitlab.com/collectivecloud/docker-builds:php7.3-nc21
      alias: nextcloud.local
      entrypoint: ["/usr/local/bin/run.sh"]

Browser PHP 7.3 nextcloud 20:
  <<: *browser-test
  services:
    - name: registry.gitlab.com/collectivecloud/docker-builds:php7.3-nc20
      alias: nextcloud.local
      entrypoint: ["/usr/local/bin/run.sh"]

# Job to build documentation website on Gitlab pages
pages:
  image: registry.gitlab.com/pages/hugo:latest
  script:
    - apk add --update --no-cache git
    - git submodule update --init
    - cat DEVELOPING.md >>docs/content/development/_index.md
    - hugo --config=docs/config.toml
    - mv build/pages public
  artifacts:
    paths:
      - public
  only:
    - main
